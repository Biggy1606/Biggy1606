version: '3.1'

# networks
# create a network 'guacnetwork_compose' in mode 'bridged'
networks:
  guacnetwork_compose:
    driver: bridge

# services
services:
  # guacd
  guacd:
    container_name: guacd_compose
    image: guacamole/guacd
    networks:
      guacnetwork_compose:
    restart: unless-stopped
    volumes:
      - ${GUACD_SERVER_DRIVE_PATH}:/drive:rw
      - ${GUACD_SERVER_RECORD_PATH}:/record:rw
  # postgres
  # postgres:
  #   container_name: postgres_guacamole_compose
  #   environment:
  #     PGDATA: /var/lib/postgresql/data/guacamole
  #     POSTGRES_DB: guacamole_db
  #     POSTGRES_PASSWORD: 'ChooseYourOwnPasswordHere1234'
  #     POSTGRES_USER: guacamole_user
  #   image: postgres:13.4
  #   networks:
  #     guacnetwork_compose:
  #   restart: unless-stopped
  #   volumes:
  #   - ./init:/docker-entrypoint-initdb.d:ro
  #   - ./data:/var/lib/postgresql/data:rw

  # guacamole
  guacamole:
    container_name: guacamole_compose
    depends_on:
      - guacd
      - postgres
    environment:
      GUACD_HOSTNAME: guacd
      POSTGRES_DATABASE: guacamole_db
      POSTGRES_HOSTNAME: postgres
      POSTGRES_PASSWORD: 'ChooseYourOwnPasswordHere1234'
      POSTGRES_USER: guacamole_user
    image: guacamole/guacamole
    links:
      - guacd
    networks:
      guacnetwork_compose:
    ports:
      ## enable next line if not using nginx
      ##    - 8080:8080/tcp # Guacamole is on :8080/guacamole, not /.
      ## enable next line when using nginx
      - 8080/tcp
    restart: unless-stopped

  ########### optional ##############
  # nginx
  nginx:
    container_name: nginx_guacamole_compose
    restart: always
    image: nginx
    volumes:
      - ./nginx/ssl/self.cert:/etc/nginx/ssl/self.cert:ro
      - ./nginx/ssl/self-ssl.key:/etc/nginx/ssl/self-ssl.key:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/mysite.template:/etc/nginx/conf.d/default.conf:ro
    ports:
      - 8443:443
    links:
      - guacamole
    networks:
      guacnetwork_compose: # run nginx
    command: /bin/bash -c "nginx -g 'daemon off;'"

# nginx-debug-mode
#   command: /bin/bash -c "nginx-debug -g 'daemon off;'"
####################################################################################
